"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,y=s["".concat(u,".").concat(d)]||s[d]||m[d]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},o="compose",l={unversionedId:"intro",id:"intro",title:"compose",description:"DataStore wrapper utility.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/rbx-util/docs/intro",draft:!1,editUrl:"https://github.com/Simple-Magic/rbx-util/edit/main/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},u={},p=[],c={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compose"},"compose"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-luau"},"function compose(\n    className: string,\n    properties: Table<string, any>?,\n    children: { Instance }?\n): Instance\n")),(0,a.kt)("h1",{id:"maid"},"Maid"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-luau"},"type Maid = {\n    new: Function<Maid>,\n    Add: Function<Variant, (Maid, Variant)>,\n    Append: Function<{ Variant }, (Maid, { Variant })>,\n    Destroy: Function<void, Maid>\n}\n")),(0,a.kt)("h1",{id:"stackqueue"},"StackQueue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-luau"},"type StackQueue = {\n    new: Function<StackQueue>,\n    Append: Function<void, StackQueue>,\n}\n")),(0,a.kt)("h1",{id:"repository"},"Repository"),(0,a.kt)("p",null,"DataStore wrapper utility."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-luau"},"type Repository = {\n    new: Function<Repository, Init>,\n    Get: Function<Repository.Entity, (Repository, number | string | Player)>,\n    Entity.Start: Function<void, (Repository.Entity, Player)>\n}\n")),(0,a.kt)("h1",{id:"message"},"Message"),(0,a.kt)("p",null,"Bundle of services for sending messages to clients."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AnnouncementService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":Announce(message: string, options: AnnouncementOptions?)"),(0,a.kt)("li",{parentName:"ul"},":AnnounceFor(player: Player, message: string, options: AnnouncementOptions?)"))),(0,a.kt)("li",{parentName:"ul"},"CountdownService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":Countdown(count: Integer)"))),(0,a.kt)("li",{parentName:"ul"},"DialogueService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":DialogueFor(player: Player, options: DialogueOptions?): Signal"))),(0,a.kt)("li",{parentName:"ul"},"HitmarkerService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":HitmarkerFor(player: Player, content: string)"))),(0,a.kt)("li",{parentName:"ul"},"LoadingService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":SetLoading(loading: boolean)"),(0,a.kt)("li",{parentName:"ul"},":SetLoadingFor(player: Player, loading: boolean)"))),(0,a.kt)("li",{parentName:"ul"},"LogService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":LogAll(message: string)"),(0,a.kt)("li",{parentName:"ul"},":LogTo(player: Player, message: string)")))),(0,a.kt)("h1",{id:"bar"},"Bar"),(0,a.kt)("p",null,"Bundle of bar widgets. Includes Health and Clock UI."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ClockService",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},":SetClock(startMillis: number, endMillis: number)")))),(0,a.kt)("h1",{id:"playerlist"},"PlayerList"),(0,a.kt)("p",null,"Player list gui which in addition to players shows bots."),(0,a.kt)("h1",{id:"isocamera"},"IsoCamera"),(0,a.kt)("p",null,"Isometric view camera."))}m.isMDXComponent=!0}}]);