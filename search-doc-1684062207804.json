[{"title":"Bar","type":0,"sectionRef":"#","url":"/rbx-util/docs/Bar","content":"","keywords":""},{"title":"ClockService​","type":1,"pageTitle":"Bar","url":"/rbx-util/docs/Bar#clockservice","content":":SetClock(startMillis: number, endMillis: number) "},{"title":"PlayerList","type":0,"sectionRef":"#","url":"/rbx-util/docs/PlayerList","content":"PlayerList Player list gui which in addition to players shows bots.","keywords":""},{"title":"IsoCamera","type":0,"sectionRef":"#","url":"/rbx-util/docs/IsoCamera","content":"IsoCamera Isometric view camera.","keywords":""},{"title":"StackQueue","type":0,"sectionRef":"#","url":"/rbx-util/docs/StackQueue","content":"StackQueue type StackQueue = { new: Function&lt;StackQueue&gt;, Append: Function&lt;void, StackQueue&gt;, } ","keywords":""},{"title":"Repository","type":0,"sectionRef":"#","url":"/rbx-util/docs/Repository","content":"Repository DataStore wrapper utility. type Repository = { new: Function&lt;Repository, Init&gt;, Get: Function&lt;Repository.Entity, (Repository, number | string | Player)&gt;, Entity.Start: Function&lt;void, (Repository.Entity, Player)&gt; } ","keywords":""},{"title":"Maid","type":0,"sectionRef":"#","url":"/rbx-util/docs/Maid","content":"Maid type Maid = { new: Function&lt;Maid&gt;, Add: Function&lt;Variant, (Maid, Variant)&gt;, Append: Function&lt;{ Variant }, (Maid, { Variant })&gt;, Destroy: Function&lt;void, Maid&gt; } ","keywords":""},{"title":"Repository","type":0,"sectionRef":"#","url":"/rbx-util/api/Repository","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#properties","content":" "},{"title":"Name​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#Name","content":"&lt;/&gt; Repository.Name: string DataStore name to use when accessing DataStoreService.  "},{"title":"Interval​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#Interval","content":"&lt;/&gt; Repository.Interval: number Interval at which connected players' entities are saved.  "},{"title":"Entity​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#Entity","content":"&lt;/&gt; Repository.Entity: Entity Entity class used when initializing players' entities. "},{"title":"Functions​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#new","content":"&lt;/&gt; Repository.new(init: Repository?) → Repository Creates a Repository.  "},{"title":"Get​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#Get","content":"&lt;/&gt; Repository:Get(id: number | string | Player ) → Entity "},{"title":"Types","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository##","content":""},{"title":"​","type":1,"pageTitle":"Repository","url":"/rbx-util/api/Repository#Entity","content":"interface Entity { Start: ( self: Entity, player: Player? ) → nil }  Gets an Entity. "},{"title":"compose","type":0,"sectionRef":"#","url":"/rbx-util/docs/compose","content":"compose function compose( className: string, properties: Table&lt;string, any&gt;?, children: { Instance }? ): Instance ","keywords":""},{"title":"About","type":0,"sectionRef":"#","url":"/rbx-util/docs/intro","content":"About Utility modules for Roblox","keywords":""},{"title":"Message","type":0,"sectionRef":"#","url":"/rbx-util/docs/Message","content":"","keywords":""},{"title":"AnnouncementService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#announcementservice","content":":Announce(message: string, options: AnnouncementOptions?):AnnounceFor(player: Player, message: string, options: AnnouncementOptions?) "},{"title":"CountdownService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#countdownservice","content":":Countdown(count: Integer) "},{"title":"DialogueService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#dialogueservice","content":":DialogueFor(player: Player, options: DialogueOptions?): Signal "},{"title":"HitmarkerService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#hitmarkerservice","content":":HitmarkerFor(player: Player, content: string) "},{"title":"LoadingService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#loadingservice","content":":SetLoading(loading: boolean):SetLoadingFor(player: Player, loading: boolean) "},{"title":"LogService​","type":1,"pageTitle":"Message","url":"/rbx-util/docs/Message#logservice","content":":LogAll(message: string):LogTo(player: Player, message: string) "}]